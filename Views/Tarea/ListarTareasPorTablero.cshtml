@using Kanban
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    int idUsuario = HttpContextAccessor.HttpContext.Session.GetInt32("Id").Value;
    
}
@model List<Kanban.ViewModels.ListarTareasViewModel>

@{
    ViewData["Title"] = "Tareas del Tablero " + ViewData["NombreTablero"];
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}
<h1>Tareas del Tablero @ViewData["NombreTablero"]</h1>

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Descripci√≥n</th>
            <th>Estado</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var tarea in Model)
        {
            <tr style="background-color:@tarea.Color;">
                <td>@tarea.Nombre</td>
                <td>@tarea.Descripcion</td>
                <td>@tarea.Estado</td>
                <td>
                    @if (tarea.IdUsuarioAsignado == idUsuario || ViewData["IdUsuarioPropietario"].ToString() ==idUsuario.ToString())
                    {
                        <a asp-controller="Tarea" asp-action="ModificarTarea" asp-route-id="@tarea.Id" class="btn btn-primary">Modificar</a>
                        <a asp-controller="Tarea" asp-action="EliminarTarea" asp-route-id="@tarea.Id" class="btn btn-danger">Eliminar</a>
                        <a asp-controller="Tarea" asp-action="Asignar" asp-route-idTarea="@tarea.Id" class="btn btn-warning">Asignar Usuario</a>
                    }
                    else
                    {
                        <span>Solo lectura</span>
                    }
                </td>
                
            </tr>
        }
    </tbody>
</table>

<div class="text-center">
    <a asp-controller="Tablero" asp-action="Listar" class="btn btn-secondary">Volver a Tableros</a>
    <a asp-controller="Tarea" asp-action="CrearTarea" class="btn btn-secondary" asp-route-idTablero="@ViewData["IdTablero"]">Agregar Tarea</a>

</div>